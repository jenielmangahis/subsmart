{"version":3,"file":"main.js","sources":["src/license.tsx","src/options.ts","src/main.ts"],"sourcesContent":["import { config, isValidDate, addDays, createElement, CalendarContext } from '@fullcalendar/common'\n\nconst RELEASE_DATE = '<%= releaseDate %>' // for Scheduler\nconst UPGRADE_WINDOW = 365 + 7 // days. 1 week leeway, for tz shift reasons too\nconst LICENSE_INFO_URL = 'http://fullcalendar.io/scheduler/license/'\nconst PRESET_LICENSE_KEYS = [\n  'GPL-My-Project-Is-Open-Source',\n  'CC-Attribution-NonCommercial-NoDerivatives'\n]\nconst CSS = {\n  position: 'absolute' as 'absolute', // for TS+React. ugh.\n  zIndex: 99999,\n  bottom: '1px',\n  left: '1px',\n  background: '#eee',\n  borderColor: '#ddd',\n  borderStyle: 'solid',\n  borderWidth: '1px 1px 0 0',\n  padding: '2px 4px',\n  fontSize: '12px',\n  borderTopRightRadius: '3px'\n}\n\n\nexport function buildLicenseWarning(context: CalendarContext) {\n  let key = context.options.schedulerLicenseKey\n\n  if (!isImmuneUrl(window.location.href) && !isValidKey(key)) {\n    return (\n      <div className='fc-license-message' style={CSS}>\n        Please use a valid license key. <a href={LICENSE_INFO_URL}>More Info</a>\n      </div>\n    )\n  }\n}\n\n\n/*\nThis decryption is not meant to be bulletproof. Just a way to remind about an upgrade.\n*/\nfunction isValidKey(key) {\n  if (PRESET_LICENSE_KEYS.indexOf(key) !== -1) {\n    return true\n  }\n  const parts = (key || '').match(/^(\\d+)-fcs-(\\d+)$/)\n  if (parts && (parts[1].length === 10)) {\n    const purchaseDate = new Date(parseInt(parts[2], 10) * 1000)\n    const releaseDate = new Date(config.mockSchedulerReleaseDate || RELEASE_DATE)\n\n    if (isValidDate(releaseDate)) { // token won't be replaced in dev mode\n      const minPurchaseDate = addDays(releaseDate, -UPGRADE_WINDOW)\n      if (minPurchaseDate < purchaseDate) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\n\nfunction isImmuneUrl(url) {\n  return /\\w+:\\/\\/fullcalendar\\.io\\/|\\/examples\\/[\\w-]+\\.html$/.test(url)\n}\n","\nexport const OPTION_REFINERS = {\n  schedulerLicenseKey: String\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { buildLicenseWarning } from './license'\nimport { OPTION_REFINERS } from './options'\nimport './options-declare'\n\nexport default createPlugin({\n  optionRefiners: OPTION_REFINERS,\n  viewContainerAppends: [ buildLicenseWarning ]\n})\n"],"names":[],"mappings":";;;;;;;AAEA,IAAM,YAAY,GAAG,YAAoB,CAAA;AACzC,IAAM,cAAc,GAAG,GAAG,GAAG,CAAC,CAAA;AAC9B,IAAM,gBAAgB,GAAG,2CAA2C,CAAA;AACpE,IAAM,mBAAmB,GAAG;IAC1B,+BAA+B;IAC/B,4CAA4C;CAC7C,CAAA;AACD,IAAM,GAAG,GAAG;IACV,QAAQ,EAAE,UAAwB;IAClC,MAAM,EAAE,KAAK;IACb,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,KAAK;IACX,UAAU,EAAE,MAAM;IAClB,WAAW,EAAE,MAAM;IACnB,WAAW,EAAE,OAAO;IACpB,WAAW,EAAE,aAAa;IAC1B,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,MAAM;IAChB,oBAAoB,EAAE,KAAK;CAC5B,CAAA;SAGe,mBAAmB,CAAC,OAAwB;IAC1D,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAA;IAE7C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAC1D,QACE,uBAAK,SAAS,EAAC,oBAAoB,EAAC,KAAK,EAAE,GAAG;;YACZ,qBAAG,IAAI,EAAE,gBAAgB,gBAAe,CACpE,EACP;KACF;AACH,CAAC;AAGD;;;AAGA,SAAS,UAAU,CAAC,GAAG;IACrB,IAAI,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3C,OAAO,IAAI,CAAA;KACZ;IACD,IAAM,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,EAAE,KAAK,CAAC,mBAAmB,CAAC,CAAA;IACpD,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,EAAE;QACrC,IAAM,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;QAC5D,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,IAAI,YAAY,CAAC,CAAA;QAE7E,IAAI,WAAW,CAAC,WAAW,CAAC,EAAE;YAC5B,IAAM,eAAe,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,cAAc,CAAC,CAAA;YAC7D,IAAI,eAAe,GAAG,YAAY,EAAE;gBAClC,OAAO,IAAI,CAAA;aACZ;SACF;KACF;IACD,OAAO,KAAK,CAAA;AACd,CAAC;AAGD,SAAS,WAAW,CAAC,GAAG;IACtB,OAAO,sDAAsD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACzE;;AC7DO,IAAM,eAAe,GAAG;IAC7B,mBAAmB,EAAE,MAAM;CAC5B;;ACED,WAAe,YAAY,CAAC;IAC1B,cAAc,EAAE,eAAe;IAC/B,oBAAoB,EAAE,CAAE,mBAAmB,CAAE;CAC9C,CAAC;;;;"}