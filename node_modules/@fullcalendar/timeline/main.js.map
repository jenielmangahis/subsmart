{"version":3,"file":"main.js","sources":["src/timeline-date-profile.ts","src/TimelineHeaderTh.tsx","src/TimelineHeaderRows.tsx","src/TimelineHeader.tsx","src/TimelineSlatCell.tsx","src/TimelineCoords.ts","src/TimelineSlats.tsx","src/TimelineLaneBg.tsx","src/TimelineLaneSlicer.ts","src/TimelineEvent.tsx","src/event-placement.ts","src/TimelineLane.tsx","src/TimelineGrid.tsx","src/TimelineView.tsx","src/main.ts"],"sourcesContent":["import {\n  config, computeVisibleDayRange, Duration, DateProfile, asCleanDays, addDays, wholeDivideDurations, DateMarker, startOfDay, createDuration, DateEnv, diffWholeDays, asRoughMs,\n  createFormatter, greatestDurationDenominator, asRoughMinutes, padStart, asRoughSeconds, DateRange, isInt, DateProfileGenerator, BaseOptionsRefined\n} from '@fullcalendar/common'\n\nexport interface TimelineDateProfile {\n  labelInterval: Duration\n  slotDuration: Duration\n  slotsPerLabel: number\n  headerFormats: any\n  isTimeScale: boolean\n  largeUnit: string\n  emphasizeWeeks: boolean\n  snapDuration: Duration\n  snapsPerSlot: number\n  normalizedRange: DateRange // snaps to unit. adds in slotMinTime/slotMaxTime\n  timeWindowMs: number\n  slotDates: DateMarker[]\n  isWeekStarts: boolean[]\n  snapDiffToIndex: number[]\n  snapIndexToDiff: number[]\n  snapCnt: number\n  slotCnt: number\n  cellRows: TimelineHeaderCell[][]\n}\n\nexport interface TimelineHeaderCell {\n  date: DateMarker\n  text: string\n  rowUnit: string\n  colspan: number\n  isWeekStart: boolean\n}\n\n\nconst MIN_AUTO_LABELS = 18 // more than `12` months but less that `24` hours\nconst MAX_AUTO_SLOTS_PER_LABEL = 6 // allows 6 10-min slots in an hour\nconst MAX_AUTO_CELLS = 200 // allows 4-days to have a :30 slot duration\nconfig.MAX_TIMELINE_SLOTS = 1000\n\n// potential nice values for slot-duration and interval-duration\nconst STOCK_SUB_DURATIONS = [ // from largest to smallest\n  { years: 1 },\n  { months: 1 },\n  { days: 1 },\n  { hours: 1 },\n  { minutes: 30 },\n  { minutes: 15 },\n  { minutes: 10 },\n  { minutes: 5 },\n  { minutes: 1 },\n  { seconds: 30 },\n  { seconds: 15 },\n  { seconds: 10 },\n  { seconds: 5 },\n  { seconds: 1 },\n  { milliseconds: 500 },\n  { milliseconds: 100 },\n  { milliseconds: 10 },\n  { milliseconds: 1 }\n]\n\n\nexport function buildTimelineDateProfile(dateProfile: DateProfile, dateEnv: DateEnv, allOptions: BaseOptionsRefined, dateProfileGenerator: DateProfileGenerator): TimelineDateProfile {\n  let tDateProfile = {\n    labelInterval: allOptions.slotLabelInterval,\n    slotDuration: allOptions.slotDuration\n  } as TimelineDateProfile\n\n  validateLabelAndSlot(tDateProfile, dateProfile, dateEnv) // validate after computed grid duration\n  ensureLabelInterval(tDateProfile, dateProfile, dateEnv)\n  ensureSlotDuration(tDateProfile, dateProfile, dateEnv)\n\n  let input = allOptions.slotLabelFormat\n  let rawFormats =\n    Array.isArray(input) ? input :\n    (input != null) ? [ input ] :\n    computeHeaderFormats(tDateProfile, dateProfile, dateEnv, allOptions)\n\n  tDateProfile.headerFormats = rawFormats.map(function(rawFormat) {\n    return createFormatter(rawFormat)\n  })\n\n  tDateProfile.isTimeScale = Boolean(tDateProfile.slotDuration.milliseconds)\n\n  let largeUnit = null\n  if (!tDateProfile.isTimeScale) {\n    const slotUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n    if (/year|month|week/.test(slotUnit)) {\n      largeUnit = slotUnit\n    }\n  }\n\n  tDateProfile.largeUnit = largeUnit\n\n  tDateProfile.emphasizeWeeks =\n    asCleanDays(tDateProfile.slotDuration) === 1 &&\n    currentRangeAs('weeks', dateProfile, dateEnv) >= 2 &&\n    !allOptions.businessHours\n\n  /*\n  console.log('label interval =', timelineView.labelInterval.humanize())\n  console.log('slot duration =', timelineView.slotDuration.humanize())\n  console.log('header formats =', timelineView.headerFormats)\n  console.log('isTimeScale', timelineView.isTimeScale)\n  console.log('largeUnit', timelineView.largeUnit)\n  */\n\n  let rawSnapDuration = allOptions.snapDuration\n  let snapDuration\n  let snapsPerSlot\n\n  if (rawSnapDuration) {\n    snapDuration = createDuration(rawSnapDuration)\n    snapsPerSlot = wholeDivideDurations(tDateProfile.slotDuration, snapDuration)\n    // ^ TODO: warning if not whole?\n  }\n\n  if (snapsPerSlot == null) {\n    snapDuration = tDateProfile.slotDuration\n    snapsPerSlot = 1\n  }\n\n  tDateProfile.snapDuration = snapDuration\n  tDateProfile.snapsPerSlot = snapsPerSlot\n\n  // more...\n\n  let timeWindowMs = asRoughMs(dateProfile.slotMaxTime) - asRoughMs(dateProfile.slotMinTime)\n\n  // TODO: why not use normalizeRange!?\n  let normalizedStart = normalizeDate(dateProfile.renderRange.start, tDateProfile, dateEnv)\n  let normalizedEnd = normalizeDate(dateProfile.renderRange.end, tDateProfile, dateEnv)\n\n  // apply slotMinTime/slotMaxTime\n  // TODO: View should be responsible.\n  if (tDateProfile.isTimeScale) {\n    normalizedStart = dateEnv.add(normalizedStart, dateProfile.slotMinTime)\n    normalizedEnd = dateEnv.add(\n      addDays(normalizedEnd, -1),\n      dateProfile.slotMaxTime\n    )\n  }\n\n  tDateProfile.timeWindowMs = timeWindowMs\n  tDateProfile.normalizedRange = { start: normalizedStart, end: normalizedEnd }\n\n  let slotDates = []\n  let date = normalizedStart\n  while (date < normalizedEnd) {\n    if (isValidDate(date, tDateProfile, dateProfile, dateProfileGenerator)) {\n      slotDates.push(date)\n    }\n    date = dateEnv.add(date, tDateProfile.slotDuration)\n  }\n\n  tDateProfile.slotDates = slotDates\n\n  // more...\n\n  let snapIndex = -1\n  let snapDiff = 0 // index of the diff :(\n  const snapDiffToIndex = []\n  const snapIndexToDiff = []\n\n  date = normalizedStart\n  while (date < normalizedEnd) {\n    if (isValidDate(date, tDateProfile, dateProfile, dateProfileGenerator)) {\n      snapIndex++\n      snapDiffToIndex.push(snapIndex)\n      snapIndexToDiff.push(snapDiff)\n    } else {\n      snapDiffToIndex.push(snapIndex + 0.5)\n    }\n    date = dateEnv.add(date, tDateProfile.snapDuration)\n    snapDiff++\n  }\n\n  tDateProfile.snapDiffToIndex = snapDiffToIndex\n  tDateProfile.snapIndexToDiff = snapIndexToDiff\n\n  tDateProfile.snapCnt = snapIndex + 1 // is always one behind\n  tDateProfile.slotCnt = tDateProfile.snapCnt / tDateProfile.snapsPerSlot\n\n  // more...\n\n  tDateProfile.isWeekStarts = buildIsWeekStarts(tDateProfile, dateEnv)\n  tDateProfile.cellRows = buildCellRows(tDateProfile, dateEnv)\n  tDateProfile.slotsPerLabel = wholeDivideDurations(tDateProfile.labelInterval, tDateProfile.slotDuration)\n\n  return tDateProfile\n}\n\n\n/*\nsnaps to appropriate unit\n*/\nexport function normalizeDate(date: DateMarker, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): DateMarker {\n  let normalDate = date\n\n  if (!tDateProfile.isTimeScale) {\n    normalDate = startOfDay(normalDate)\n\n    if (tDateProfile.largeUnit) {\n      normalDate = dateEnv.startOf(normalDate, tDateProfile.largeUnit)\n    }\n  }\n\n  return normalDate\n}\n\n\n/*\nsnaps to appropriate unit\n*/\nexport function normalizeRange(range: DateRange, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): DateRange {\n\n  if (!tDateProfile.isTimeScale) {\n    range = computeVisibleDayRange(range)\n\n    if (tDateProfile.largeUnit) {\n      let dayRange = range // preserve original result\n\n      range = {\n        start: dateEnv.startOf(range.start, tDateProfile.largeUnit),\n        end: dateEnv.startOf(range.end, tDateProfile.largeUnit)\n      }\n\n      // if date is partially through the interval, or is in the same interval as the start,\n      // make the exclusive end be the *next* interval\n      if (range.end.valueOf() !== dayRange.end.valueOf() || range.end <= range.start) {\n        range = {\n          start: range.start,\n          end: dateEnv.add(range.end, tDateProfile.slotDuration)\n        }\n      }\n    }\n  }\n\n  return range\n}\n\n\nexport function isValidDate(date: DateMarker, tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  if (dateProfileGenerator.isHiddenDay(date)) {\n    return false\n\n  } else if (tDateProfile.isTimeScale) {\n    // determine if the time is within slotMinTime/slotMaxTime, which may have wacky values\n    let day = startOfDay(date)\n    let timeMs = date.valueOf() - day.valueOf()\n    let ms = timeMs - asRoughMs(dateProfile.slotMinTime) // milliseconds since slotMinTime\n    ms = ((ms % 86400000) + 86400000) % 86400000 // make negative values wrap to 24hr clock\n    return ms < tDateProfile.timeWindowMs // before the slotMaxTime?\n\n  } else {\n    return true\n  }\n}\n\n\nfunction validateLabelAndSlot(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n\n  // make sure labelInterval doesn't exceed the max number of cells\n  if (tDateProfile.labelInterval) {\n    const labelCnt = dateEnv.countDurationsBetween(\n      currentRange.start,\n      currentRange.end,\n      tDateProfile.labelInterval\n    )\n    if (labelCnt > config.MAX_TIMELINE_SLOTS) {\n      console.warn('slotLabelInterval results in too many cells')\n      tDateProfile.labelInterval = null\n    }\n  }\n\n  // make sure slotDuration doesn't exceed the maximum number of cells\n  if (tDateProfile.slotDuration) {\n    const slotCnt = dateEnv.countDurationsBetween(\n      currentRange.start,\n      currentRange.end,\n      tDateProfile.slotDuration\n    )\n    if (slotCnt > config.MAX_TIMELINE_SLOTS) {\n      console.warn('slotDuration results in too many cells')\n      tDateProfile.slotDuration = null\n    }\n  }\n\n  // make sure labelInterval is a multiple of slotDuration\n  if (tDateProfile.labelInterval && tDateProfile.slotDuration) {\n    const slotsPerLabel = wholeDivideDurations(tDateProfile.labelInterval, tDateProfile.slotDuration)\n    if (slotsPerLabel === null || slotsPerLabel < 1) {\n      console.warn('slotLabelInterval must be a multiple of slotDuration')\n      tDateProfile.slotDuration = null\n    }\n  }\n}\n\n\nfunction ensureLabelInterval(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n  let { labelInterval } = tDateProfile\n\n  if (!labelInterval) {\n\n    // compute based off the slot duration\n    // find the largest label interval with an acceptable slots-per-label\n    let input\n    if (tDateProfile.slotDuration) {\n      for (input of STOCK_SUB_DURATIONS) {\n        const tryLabelInterval = createDuration(input)\n        const slotsPerLabel = wholeDivideDurations(tryLabelInterval, tDateProfile.slotDuration)\n        if (slotsPerLabel !== null && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n          labelInterval = tryLabelInterval\n          break\n        }\n      }\n\n      // use the slot duration as a last resort\n      if (!labelInterval) {\n        labelInterval = tDateProfile.slotDuration\n      }\n\n    // compute based off the view's duration\n    // find the largest label interval that yields the minimum number of labels\n    } else {\n      for (input of STOCK_SUB_DURATIONS) {\n        labelInterval = createDuration(input)\n        const labelCnt = dateEnv.countDurationsBetween(\n          currentRange.start,\n          currentRange.end,\n          labelInterval\n        )\n        if (labelCnt >= MIN_AUTO_LABELS) {\n          break\n        }\n      }\n    }\n\n    tDateProfile.labelInterval = labelInterval\n  }\n\n  return labelInterval\n}\n\n\nfunction ensureSlotDuration(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv) {\n  const { currentRange } = dateProfile\n  let { slotDuration } = tDateProfile\n\n  if (!slotDuration) {\n    const labelInterval = ensureLabelInterval(tDateProfile, dateProfile, dateEnv) // will compute if necessary\n\n    // compute based off the label interval\n    // find the largest slot duration that is different from labelInterval, but still acceptable\n    for (let input of STOCK_SUB_DURATIONS) {\n      const trySlotDuration = createDuration(input)\n      const slotsPerLabel = wholeDivideDurations(labelInterval, trySlotDuration)\n      if (slotsPerLabel !== null && slotsPerLabel > 1 && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\n        slotDuration = trySlotDuration\n        break\n      }\n    }\n\n    // only allow the value if it won't exceed the view's # of slots limit\n    if (slotDuration) {\n      const slotCnt = dateEnv.countDurationsBetween(\n        currentRange.start,\n        currentRange.end,\n        slotDuration\n      )\n      if (slotCnt > MAX_AUTO_CELLS) {\n        slotDuration = null\n      }\n    }\n\n    // use the label interval as a last resort\n    if (!slotDuration) {\n      slotDuration = labelInterval\n    }\n\n    tDateProfile.slotDuration = slotDuration\n  }\n\n  return slotDuration\n}\n\n\nfunction computeHeaderFormats(tDateProfile: TimelineDateProfile, dateProfile: DateProfile, dateEnv: DateEnv, allOptions: BaseOptionsRefined) {\n  let format1\n  let format2\n  const { labelInterval } = tDateProfile\n  let unit = greatestDurationDenominator(labelInterval).unit\n  const weekNumbersVisible = allOptions.weekNumbers\n  let format0 = (format1 = (format2 = null))\n\n  // NOTE: weekNumber computation function wont work\n\n  if ((unit === 'week') && !weekNumbersVisible) {\n    unit = 'day'\n  }\n\n  switch (unit) {\n    case 'year':\n      format0 = { year: 'numeric' } // '2015'\n      break\n\n    case 'month':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric' } // '2015'\n      }\n\n      format1 = { month: 'short' } // 'Jan'\n      break\n\n    case 'week':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric' } // '2015'\n      }\n\n      format1 = { week: 'narrow' } // 'Wk4'\n      break\n\n    case 'day':\n      if (currentRangeAs('years', dateProfile, dateEnv) > 1) {\n        format0 = { year: 'numeric', month: 'long' } // 'January 2014'\n      } else if (currentRangeAs('months', dateProfile, dateEnv) > 1) {\n        format0 = { month: 'long' } // 'January'\n      }\n\n      if (weekNumbersVisible) {\n        format1 = { week: 'short' } // 'Wk 4'\n      }\n\n      format2 = { weekday: 'narrow', day: 'numeric' } // 'Su 9'\n      break\n\n    case 'hour':\n      if (weekNumbersVisible) {\n        format0 = { week: 'short' } // 'Wk 4'\n      }\n\n      if (currentRangeAs('days', dateProfile, dateEnv) > 1) {\n        format1 = { weekday: 'short', day: 'numeric', month: 'numeric', omitCommas: true } // Sat 4/7\n      }\n\n      format2 = {\n        hour: 'numeric',\n        minute: '2-digit',\n        omitZeroMinute: true,\n        meridiem: 'short'\n      }\n      break\n\n    case 'minute':\n      // sufficiently large number of different minute cells?\n      if ((asRoughMinutes(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n        format0 = {\n          hour: 'numeric',\n          meridiem: 'short'\n        }\n        format1 = function(params) {\n          return ':' + padStart(params.date.minute, 2) // ':30'\n        }\n      } else {\n        format0 = {\n          hour: 'numeric',\n          minute: 'numeric',\n          meridiem: 'short'\n        }\n      }\n      break\n\n    case 'second':\n      // sufficiently large number of different second cells?\n      if ((asRoughSeconds(labelInterval) / 60) >= MAX_AUTO_SLOTS_PER_LABEL) {\n        format0 = { hour: 'numeric', minute: '2-digit', meridiem: 'lowercase' } // '8:30 PM'\n        format1 = function(params) {\n          return ':' + padStart(params.date.second, 2) // ':30'\n        }\n      } else {\n        format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' } // '8:30:45 PM'\n      }\n      break\n\n    case 'millisecond':\n      format0 = { hour: 'numeric', minute: '2-digit', second: '2-digit', meridiem: 'lowercase' } // '8:30:45 PM'\n      format1 = function(params) {\n        return '.' + padStart(params.millisecond, 3)\n      }\n      break\n  }\n\n  return [].concat(format0 || [], format1 || [], format2 || [])\n}\n\n// Compute the number of the give units in the \"current\" range.\n// Won't go more precise than days.\n// Will return `0` if there's not a clean whole interval.\nfunction currentRangeAs(unit: string, dateProfile: DateProfile, dateEnv: DateEnv) {\n  let range = dateProfile.currentRange\n  let res = null\n\n  if (unit === 'years') {\n    res = dateEnv.diffWholeYears(range.start, range.end)\n  } else if (unit === 'months') {\n    res = dateEnv.diffWholeMonths(range.start, range.end)\n  } else if (unit === 'weeks') {\n    res = dateEnv.diffWholeMonths(range.start, range.end)\n  } else if (unit === 'days') {\n    res = diffWholeDays(range.start, range.end)\n  }\n\n  return res || 0\n}\n\n\nfunction buildIsWeekStarts(tDateProfile: TimelineDateProfile, dateEnv: DateEnv) {\n  let { slotDates, emphasizeWeeks } = tDateProfile\n  let prevWeekNumber = null\n  let isWeekStarts: boolean[] = []\n\n  for (let slotDate of slotDates) {\n    let weekNumber = dateEnv.computeWeekNumber(slotDate)\n    let isWeekStart = emphasizeWeeks && (prevWeekNumber !== null) && (prevWeekNumber !== weekNumber)\n    prevWeekNumber = weekNumber\n\n    isWeekStarts.push(isWeekStart)\n  }\n\n  return isWeekStarts\n}\n\n\nfunction buildCellRows(tDateProfile: TimelineDateProfile, dateEnv: DateEnv) {\n  let slotDates = tDateProfile.slotDates\n  let formats = tDateProfile.headerFormats\n  let cellRows = formats.map(() => []) // indexed by row,col\n  let slotAsDays = asCleanDays(tDateProfile.slotDuration)\n  let guessedSlotUnit =\n    slotAsDays === 7 ? 'week' :\n      slotAsDays === 1 ? 'day' :\n        null\n\n  // specifically for navclicks\n  let rowUnitsFromFormats = formats.map((format) => {\n    return format.getLargestUnit ? format.getLargestUnit() : null\n  })\n\n  // builds cellRows and slotCells\n  for (let i = 0; i < slotDates.length; i++) {\n    let date = slotDates[i]\n    let isWeekStart = tDateProfile.isWeekStarts[i]\n\n    for (let row = 0; row < formats.length; row++) {\n      let format = formats[row]\n      let rowCells = cellRows[row]\n      let leadingCell = rowCells[rowCells.length - 1]\n      let isLastRow = row === formats.length - 1\n      let isSuperRow = formats.length > 1 && !isLastRow // more than one row and not the last\n      let newCell = null\n      let rowUnit = rowUnitsFromFormats[row] || (isLastRow ? guessedSlotUnit : null)\n\n      if (isSuperRow) {\n        let text = dateEnv.format(date, format)\n        if (!leadingCell || (leadingCell.text !== text)) {\n          newCell = buildCellObject(date, text, rowUnit)\n        } else {\n          leadingCell.colspan += 1\n        }\n      } else {\n        if (\n          !leadingCell ||\n          isInt(dateEnv.countDurationsBetween(\n            tDateProfile.normalizedRange.start,\n            date,\n            tDateProfile.labelInterval\n          ))\n        ) {\n          let text = dateEnv.format(date, format)\n          newCell = buildCellObject(date, text, rowUnit)\n        } else {\n          leadingCell.colspan += 1\n        }\n      }\n\n      if (newCell) {\n        newCell.weekStart = isWeekStart\n        rowCells.push(newCell)\n      }\n    }\n  }\n\n  return cellRows\n}\n\n\nfunction buildCellObject(date: DateMarker, text, rowUnit): TimelineHeaderCell {\n  return { date, text, rowUnit, colspan: 1, isWeekStart: false }\n}\n","import {\n  createElement, BaseComponent, DateRange, DateMarker, getDateMeta, getSlotClassNames, buildNavLinkData, buildClassNameNormalizer, MountHook, ContentHook, ViewApi, getDayClassNames, DateProfile, memoizeObjArg, DateEnv\n} from '@fullcalendar/common'\nimport { TimelineDateProfile, TimelineHeaderCell } from './timeline-date-profile'\n\n\nexport interface TimelineHeaderThProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  rowLevel: number\n  cell: TimelineHeaderCell\n  todayRange: DateRange\n  nowDate: DateMarker\n  rowInnerHeight?: number\n  isSticky: boolean\n}\n\nexport class TimelineHeaderTh extends BaseComponent<TimelineHeaderThProps> {\n\n  refineHookProps = memoizeObjArg(refineHookProps)\n  normalizeClassNames = buildClassNameNormalizer<HookProps>()\n\n\n  render() {\n    let { props, context } = this\n    let { dateEnv, options } = context\n    let { cell, dateProfile, tDateProfile } = props\n\n    // the cell.rowUnit is f'd\n    // giving 'month' for a 3-day view\n    // workaround: to infer day, do NOT time\n\n    let dateMeta = getDateMeta(cell.date, props.todayRange, props.nowDate, dateProfile)\n\n    let classNames = [ 'fc-timeline-slot', 'fc-timeline-slot-label' ].concat(\n      cell.rowUnit === 'time' // TODO: so slot classnames for week/month/bigger. see note above about rowUnit\n        ? getSlotClassNames(dateMeta, context.theme)\n        : getDayClassNames(dateMeta, context.theme)\n    )\n\n    if (cell.isWeekStart) {\n      classNames.push('fc-timeline-slot-em')\n    }\n\n    let navLinkData = (options.navLinks && cell.rowUnit && cell.rowUnit !== 'time')\n      ? buildNavLinkData(cell.date, cell.rowUnit)\n      : null\n\n    let hookProps = this.refineHookProps({\n      level: props.rowLevel,\n      dateMarker: cell.date,\n      text: cell.text,\n      dateEnv: context.dateEnv,\n      viewApi: context.viewApi\n    })\n\n    let customClassNames = this.normalizeClassNames(options.slotLabelClassNames, hookProps)\n\n    return (\n      <MountHook hookProps={hookProps} didMount={options.slotLabelDidMount} willUnmount={options.slotLabelWillUnmount}>\n        {(rootElRef) => (\n          <th\n            ref={rootElRef}\n            className={classNames.concat(customClassNames).join(' ')}\n            data-date={dateEnv.formatIso(cell.date, { omitTime: !tDateProfile.isTimeScale, omitTimeZoneOffset: true })}\n            colSpan={cell.colspan}\n          >\n            <div className='fc-timeline-slot-frame' style={{ height: props.rowInnerHeight }}>\n              <TimelineHeaderThInner\n                hookProps={hookProps}\n                isSticky={props.isSticky}\n                navLinkData={navLinkData}\n              />\n            </div>\n          </th>\n        )}\n      </MountHook>\n    )\n  }\n\n}\n\n\ninterface TimelineHeaderThInnerProps {\n  hookProps: HookProps\n  isSticky: boolean\n  navLinkData: string | null\n}\n\nclass TimelineHeaderThInner extends BaseComponent<TimelineHeaderThInnerProps> {\n\n  render() {\n    let { props, context } = this\n\n    let navLinkAttrs = props.navLinkData\n      ? { 'data-navlink': props.navLinkData, tabIndex: 0 }\n      : {}\n\n    return (\n      <ContentHook hookProps={props.hookProps} content={context.options.slotLabelContent} defaultContent={renderInnerContent}>\n        {(innerElRef, innerContent) => (\n          <a\n            ref={innerElRef}\n            className={'fc-timeline-slot-cushion fc-scrollgrid-sync-inner' + (props.isSticky ? ' fc-sticky' : '')}\n            {...navLinkAttrs}\n          >\n            {innerContent}\n          </a>\n        )}\n      </ContentHook>\n    )\n  }\n\n}\n\nfunction renderInnerContent(props) { // TODO: add types\n  return props.text\n}\n\n\n// hook props\n// ----------\n\ninterface HookPropsInput {\n  level: number\n  dateMarker: DateMarker\n  text: string\n  dateEnv: DateEnv\n  viewApi: ViewApi\n}\n\ninterface HookProps {\n  level: number\n  date: DateMarker // localized\n  view: ViewApi\n  text: string\n}\n\nfunction refineHookProps(input: HookPropsInput): HookProps {\n  return {\n    level: input.level,\n    date: input.dateEnv.toDate(input.dateMarker),\n    view: input.viewApi,\n    text: input.text\n  }\n}\n","import { createElement, BaseComponent, Fragment, DateRange, DateMarker, DateProfile } from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineHeaderTh } from './TimelineHeaderTh'\n\n\nexport interface TimelineHeaderRowsProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  rowInnerHeights?: number[]\n}\n\nexport class TimelineHeaderRows extends BaseComponent<TimelineHeaderRowsProps> {\n\n  render() {\n    let { dateProfile, tDateProfile, rowInnerHeights, todayRange, nowDate } = this.props\n    let { cellRows } = tDateProfile\n\n    return (\n      <Fragment>\n        {cellRows.map((rowCells, rowLevel) => {\n          let isLast = rowLevel === cellRows.length - 1\n          let isChrono = tDateProfile.isTimeScale && isLast // the final row, with times?\n          let classNames = [\n            'fc-timeline-header-row',\n            isChrono ? 'fc-timeline-header-row-chrono' : ''\n          ]\n\n          return (\n            <tr key={rowLevel} className={classNames.join(' ')}>\n              {rowCells.map((cell) => (\n                <TimelineHeaderTh\n                  key={cell.date.toISOString()}\n                  cell={cell}\n                  rowLevel={rowLevel}\n                  dateProfile={dateProfile}\n                  tDateProfile={tDateProfile}\n                  todayRange={todayRange}\n                  nowDate={nowDate}\n                  rowInnerHeight={rowInnerHeights && rowInnerHeights[rowLevel]}\n                  isSticky={!isLast}\n                />\n              ))}\n            </tr>\n          )\n        })}\n      </Fragment>\n    )\n  }\n\n}\n","import { createElement, BaseComponent, CssDimValue, VNode, DateMarker, NowTimer, greatestDurationDenominator, DateRange, NowIndicatorRoot, createRef, findElements, RefObject, DateProfile } from '@fullcalendar/common'\nimport { TimelineHeaderRows } from './TimelineHeaderRows'\nimport { TimelineCoords } from './TimelineCoords'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\n\nexport interface TimelineHeaderProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  slatCoords: TimelineCoords\n  rowInnerHeights?: number[]\n  onMaxCushionWidth?: (number) => void\n}\n\n\nexport class TimelineHeader extends BaseComponent<TimelineHeaderProps> {\n\n  rootElRef: RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n\n  render() {\n    let { props, context } = this\n\n    // TODO: very repetitive\n    // TODO: make part of tDateProfile?\n    let timerUnit = greatestDurationDenominator(props.tDateProfile.slotDuration).unit\n\n    // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n    let slatCoords = props.slatCoords && props.slatCoords.dateProfile === props.dateProfile ? props.slatCoords : null\n\n    return (\n      <NowTimer unit={timerUnit}>\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <div className='fc-timeline-header' ref={this.rootElRef}>\n            <table\n              className='fc-scrollgrid-sync-table'\n              style={{ minWidth: props.tableMinWidth, width: props.clientWidth }}\n            >\n              {props.tableColGroupNode}\n              <tbody>\n                <TimelineHeaderRows\n                  dateProfile={props.dateProfile}\n                  tDateProfile={props.tDateProfile}\n                  nowDate={nowDate}\n                  todayRange={todayRange}\n                  rowInnerHeights={props.rowInnerHeights}\n                />\n              </tbody>\n            </table>\n            {context.options.nowIndicator &&\n              // need to have a container regardless of whether the current view has a visible now indicator\n              // because apparently removal of the element resets the scroll for some reasons (issue #5351).\n              // this issue doesn't happen for the timeline body however\n              <div className='fc-timeline-now-indicator-container'>\n                {(slatCoords && slatCoords.isDateInRange(nowDate)) &&\n                  <NowIndicatorRoot isAxis={true} date={nowDate}>\n                    {(rootElRef, classNames, innerElRef, innerContent) => (\n                      <div\n                        ref={rootElRef}\n                        className={[ 'fc-timeline-now-indicator-arrow' ].concat(classNames).join(' ')}\n                        style={{ left: slatCoords.dateToCoord(nowDate) }}\n                      >{innerContent}</div>\n                    )}\n                  </NowIndicatorRoot>\n                }\n              </div>\n            }\n          </div>\n        )}\n      </NowTimer>\n    )\n  }\n\n\n  componentDidMount() {\n    this.updateSize()\n  }\n\n\n  componentDidUpdate() {\n    this.updateSize()\n  }\n\n\n  updateSize() {\n    if (this.props.onMaxCushionWidth) {\n      this.props.onMaxCushionWidth(this.computeMaxCushionWidth())\n    }\n  }\n\n\n  computeMaxCushionWidth() { // TODO: called way too often\n    return Math.max(\n      ...findElements(this.rootElRef.current, '.fc-timeline-header-row:last-child .fc-timeline-slot-cushion').map(\n        (el) => el.getBoundingClientRect().width\n      )\n    )\n  }\n\n}\n","import {\n  createElement, isInt, BaseComponent, DateMarker, Ref, DateRange, getDateMeta, getSlotClassNames, RenderHook, getDayClassNames, SlotLaneContentArg, DateProfile\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\n\nexport interface TimelineSlatCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n  isDay: boolean\n  isEm: boolean\n  elRef?: Ref<HTMLTableCellElement>\n}\n\n\nexport class TimelineSlatCell extends BaseComponent<TimelineSlatCellProps> {\n\n  render() {\n    let { props, context } = this\n    let { dateEnv, options, theme } = context\n    let { date, tDateProfile, isEm } = props\n    let dateMeta = getDateMeta(props.date, props.todayRange, props.nowDate, props.dateProfile)\n    let classNames = [ 'fc-timeline-slot', 'fc-timeline-slot-lane' ]\n    let dataAttrs = { 'data-date': dateEnv.formatIso(date, { omitTimeZoneOffset: true, omitTime: !tDateProfile.isTimeScale }) }\n    let hookProps: SlotLaneContentArg = {\n      date: dateEnv.toDate(props.date),\n      ...dateMeta,\n      view: context.viewApi\n    }\n\n    if (isEm) {\n      classNames.push('fc-timeline-slot-em')\n    }\n\n    if (tDateProfile.isTimeScale) {\n      classNames.push(\n        isInt(dateEnv.countDurationsBetween(\n          tDateProfile.normalizedRange.start,\n          props.date,\n          tDateProfile.labelInterval\n        )) ?\n          'fc-timeline-slot-major' :\n          'fc-timeline-slot-minor'\n      )\n    }\n\n    classNames.push(...(\n      props.isDay\n        ? getDayClassNames(dateMeta, theme)\n        : getSlotClassNames(dateMeta, theme)\n    ))\n\n    return (\n      <RenderHook\n        hookProps={hookProps}\n        classNames={options.slotLaneClassNames}\n        content={options.slotLaneContent}\n        didMount={options.slotLaneDidMount}\n        willUnmount={options.slotLaneWillUnmount}\n        elRef={props.elRef}\n      >\n        {(rootElRef, customClassNames, innerElRef, innerContent) => (\n          <td\n            ref={rootElRef}\n            className={classNames.concat(customClassNames).join(' ')}\n            {...dataAttrs}\n          >\n            <div ref={innerElRef}>{innerContent}</div>\n          </td>\n        )}\n      </RenderHook>\n    )\n  }\n\n}\n","import {\n  PositionCache, findDirectChildren,\n  isInt, DateProfile,\n  DateMarker, DateEnv, Duration, startOfDay, rangeContainsMarker\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\n\nexport class TimelineCoords { // TODO: rename to \"slat\" coords?\n\n  outerCoordCache: PositionCache\n  innerCoordCache: PositionCache\n\n\n  constructor(\n    public slatRootEl: HTMLElement, // okay to expose?\n    slatEls: HTMLElement[],\n    public dateProfile: DateProfile,\n    private tDateProfile: TimelineDateProfile,\n    private dateEnv: DateEnv,\n    public isRtl: boolean\n  ) {\n    this.outerCoordCache = new PositionCache(\n      slatRootEl,\n      slatEls,\n      true, // isHorizontal\n      false // isVertical\n    )\n\n    // for the inner divs within the slats\n    // used for event rendering and scrollTime, to disregard slat border\n    this.innerCoordCache = new PositionCache(\n      slatRootEl,\n      findDirectChildren(slatEls, 'div'),\n      true, // isHorizontal\n      false // isVertical\n    )\n  }\n\n\n  rangeToCoords(range) {\n    if (this.isRtl) {\n      return { right: this.dateToCoord(range.start), left: this.dateToCoord(range.end) }\n    } else {\n      return { left: this.dateToCoord(range.start), right: this.dateToCoord(range.end) }\n    }\n  }\n\n\n  isDateInRange(date: DateMarker) {\n    return rangeContainsMarker(this.dateProfile.currentRange, date)\n  }\n\n\n  // for LTR, results range from 0 to width of area\n  // for RTL, results range from negative width of area to 0\n  dateToCoord(date) {\n    let { tDateProfile } = this\n    let snapCoverage = this.computeDateSnapCoverage(date)\n    let slotCoverage = snapCoverage / tDateProfile.snapsPerSlot\n    let slotIndex = Math.floor(slotCoverage)\n    slotIndex = Math.min(slotIndex, tDateProfile.slotCnt - 1)\n    let partial = slotCoverage - slotIndex\n    let { innerCoordCache, outerCoordCache } = this\n\n    if (this.isRtl) {\n      return (\n        outerCoordCache.rights[slotIndex] -\n        (innerCoordCache.getWidth(slotIndex) * partial)\n      ) - outerCoordCache.originClientRect.width\n    } else {\n      return (\n        outerCoordCache.lefts[slotIndex] +\n        (innerCoordCache.getWidth(slotIndex) * partial)\n      )\n    }\n  }\n\n\n  // returned value is between 0 and the number of snaps\n  computeDateSnapCoverage(date: DateMarker): number {\n    return computeDateSnapCoverage(date, this.tDateProfile, this.dateEnv)\n  }\n\n\n  computeDurationLeft(duration: Duration) {\n    let { dateProfile, tDateProfile, dateEnv, isRtl } = this\n    let left = 0\n\n    if (dateProfile) {\n      let date = dateEnv.add(dateProfile.activeRange.start, duration)\n\n      if (!tDateProfile.isTimeScale) {\n        date = startOfDay(date)\n      }\n\n      left = this.dateToCoord(date)\n\n      // hack to overcome the left borders of non-first slat\n      if (!isRtl && left) {\n        left += 1\n      }\n    }\n\n    return left\n  }\n\n}\n\n\n// returned value is between 0 and the number of snaps\nexport function computeDateSnapCoverage(date: DateMarker, tDateProfile: TimelineDateProfile, dateEnv: DateEnv): number {\n  let snapDiff = dateEnv.countDurationsBetween(\n    tDateProfile.normalizedRange.start,\n    date,\n    tDateProfile.snapDuration\n  )\n\n  if (snapDiff < 0) {\n    return 0\n  } else if (snapDiff >= tDateProfile.snapDiffToIndex.length) {\n    return tDateProfile.snapCnt\n  } else {\n    let snapDiffInt = Math.floor(snapDiff)\n    let snapCoverage = tDateProfile.snapDiffToIndex[snapDiffInt]\n\n    if (isInt(snapCoverage)) { // not an in-between value\n      snapCoverage += snapDiff - snapDiffInt // add the remainder\n    } else {\n      // a fractional value, meaning the date is not visible\n      // always round up in this case. works for start AND end dates in a range.\n      snapCoverage = Math.ceil(snapCoverage)\n    }\n\n    return snapCoverage\n  }\n}\n","import {\n  createElement, BaseComponent, multiplyDuration, RefMap, CssDimValue, VNode, createRef, ScrollResponder, ScrollRequest, DateMarker, DateRange, DateProfile\n} from '@fullcalendar/common'\nimport { TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineSlatCell } from './TimelineSlatCell'\nimport { TimelineCoords } from './TimelineCoords'\n\n\nexport interface TimelineSlatsProps extends TimelineSlatsContentProps {\n  clientWidth: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  onCoords?: (coord: TimelineCoords | null) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n}\n\ninterface TimelineSlatsContentProps {\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nowDate: DateMarker\n  todayRange: DateRange\n}\n\n\nexport class TimelineSlats extends BaseComponent<TimelineSlatsProps> {\n\n  private rootElRef = createRef<HTMLDivElement>()\n  private cellElRefs = new RefMap<HTMLTableCellElement>()\n  private coords: TimelineCoords // for positionToHit\n  private scrollResponder: ScrollResponder\n\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <div className='fc-timeline-slots' ref={this.rootElRef}>\n        <table\n          className={context.theme.getClass('table')}\n          style={{\n            minWidth: props.tableMinWidth,\n            width: props.clientWidth\n          }}\n        >\n          {props.tableColGroupNode}\n          <TimelineSlatsBody\n            cellElRefs={this.cellElRefs}\n            dateProfile={props.dateProfile}\n            tDateProfile={props.tDateProfile}\n            nowDate={props.nowDate}\n            todayRange={props.todayRange}\n          />\n        </table>\n      </div>\n    )\n  }\n\n\n  componentDidMount() {\n    this.updateSizing()\n    this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest)\n  }\n\n\n  componentDidUpdate(prevProps: TimelineSlatsProps) {\n    this.updateSizing()\n\n    this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile)\n  }\n\n\n  componentWillUnmount() {\n    this.scrollResponder.detach()\n\n    if (this.props.onCoords) {\n      this.props.onCoords(null)\n    }\n  }\n\n\n  updateSizing() {\n    let { props, context } = this\n\n    if (\n      props.clientWidth !== null && // is sizing stable?\n      this.scrollResponder // it's possible to have clientWidth immediately after mount (when returning from print view), but w/o scrollResponder\n    ) {\n      let rootEl = this.rootElRef.current\n\n      if (rootEl.offsetWidth) {\n        this.coords = new TimelineCoords(\n          this.rootElRef.current,\n          collectCellEls(this.cellElRefs.currentMap, props.tDateProfile.slotDates),\n          props.dateProfile,\n          props.tDateProfile,\n          context.dateEnv,\n          context.isRtl\n        )\n\n        if (props.onCoords) {\n          props.onCoords(this.coords)\n        }\n\n        this.scrollResponder.update(false) // TODO: wouldn't have to do this if coords were in state\n      }\n    }\n  }\n\n\n  handleScrollRequest = (request: ScrollRequest) => {\n    let { onScrollLeftRequest } = this.props\n    let { coords } = this\n\n    if (onScrollLeftRequest && coords) {\n      if (request.time) {\n        let scrollLeft = coords.computeDurationLeft(request.time)\n        onScrollLeftRequest(scrollLeft)\n      }\n      return true\n    }\n  }\n\n\n  positionToHit(leftPosition) { // TODO: kill somehow\n    let { outerCoordCache } = this.coords\n    let { dateEnv, isRtl } = this.context\n    let { tDateProfile } = this.props\n    let slatIndex = outerCoordCache.leftToIndex(leftPosition)\n\n    if (slatIndex != null) {\n      // somewhat similar to what TimeGrid does. consolidate?\n      let slatWidth = outerCoordCache.getWidth(slatIndex)\n      let partial = isRtl ?\n        (outerCoordCache.rights[slatIndex] - leftPosition) / slatWidth :\n        (leftPosition - outerCoordCache.lefts[slatIndex]) / slatWidth\n      let localSnapIndex = Math.floor(partial * tDateProfile.snapsPerSlot)\n      let start = dateEnv.add(\n        tDateProfile.slotDates[slatIndex],\n        multiplyDuration(tDateProfile.snapDuration, localSnapIndex)\n      )\n      let end = dateEnv.add(start, tDateProfile.snapDuration)\n\n      return {\n        dateSpan: {\n          range: { start, end },\n          allDay: !this.props.tDateProfile.isTimeScale\n        },\n        dayEl: this.cellElRefs.currentMap[slatIndex],\n        left: outerCoordCache.lefts[slatIndex], // TODO: make aware of snaps?\n        right: outerCoordCache.rights[slatIndex]\n      }\n    }\n\n    return null\n  }\n\n}\n\n\ninterface TimelineSlatsBodyProps extends TimelineSlatsContentProps {\n  cellElRefs: RefMap<HTMLTableCellElement>\n}\n\n\nclass TimelineSlatsBody extends BaseComponent<TimelineSlatsBodyProps> {\n\n  render() {\n    let { props } = this\n    let { tDateProfile, cellElRefs } = props\n    let { slotDates, isWeekStarts } = tDateProfile\n    let isDay = !tDateProfile.isTimeScale && !tDateProfile.largeUnit\n\n    return (\n      <tbody>\n        <tr>\n          {slotDates.map((slotDate, i) => {\n            let key = slotDate.toISOString()\n\n            return (\n              <TimelineSlatCell\n                key={key}\n                elRef={cellElRefs.createRef(key)}\n                date={slotDate}\n                dateProfile={props.dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={props.nowDate}\n                todayRange={props.todayRange}\n                isEm={isWeekStarts[i]}\n                isDay={isDay}\n              />\n            )\n          })}\n        </tr>\n      </tbody>\n    )\n  }\n\n}\n\n\nfunction collectCellEls(elMap: { [key: string]: HTMLElement }, slotDates: DateMarker[]) {\n  return slotDates.map((slotDate) => {\n    let key = slotDate.toISOString()\n    return elMap[key]\n  })\n}\n","import { BaseComponent, createElement, Fragment, BgEvent, renderFill, getSegMeta, DateRange, DateMarker, buildEventRangeKey } from '@fullcalendar/common'\nimport { TimelineCoords } from './TimelineCoords'\nimport { TimelineLaneSeg } from './TimelineLaneSlicer'\n\n\nexport interface TimelineLaneBgProps {\n  businessHourSegs: TimelineLaneSeg[] | null // can be null :(\n  bgEventSegs: TimelineLaneSeg[] | null // can be null :(\n  dateSelectionSegs: TimelineLaneSeg[]\n  eventResizeSegs: TimelineLaneSeg[]\n  timelineCoords?: TimelineCoords\n  todayRange: DateRange\n  nowDate: DateMarker\n}\n\n\nexport class TimelineLaneBg extends BaseComponent<TimelineLaneBgProps> {\n\n\n  render() {\n    let { props } = this\n    let highlightSeg = [].concat(props.eventResizeSegs, props.dateSelectionSegs)\n\n    return props.timelineCoords && (\n      <div className='fc-timeline-bg'>\n        {/* Fragments contain the keys */}\n        {this.renderSegs(props.businessHourSegs || [], props.timelineCoords, 'non-business')}\n        {this.renderSegs(props.bgEventSegs || [], props.timelineCoords, 'bg-event')}\n        {this.renderSegs(highlightSeg, props.timelineCoords, 'highlight')}\n      </div>\n    )\n  }\n\n\n  renderSegs(segs: TimelineLaneSeg[], timelineCoords: TimelineCoords, fillType: string) {\n    let { todayRange, nowDate } = this.props\n\n    let children = segs.map((seg) => {\n      let coords = timelineCoords.rangeToCoords(seg) // seg has { start, end }\n\n      return (\n        <div key={buildEventRangeKey(seg.eventRange)} className='fc-timeline-bg-harness' style={{\n          left: coords.left,\n          right: -coords.right // outwards from right edge (which is same as left edge)\n        }}>\n          {fillType === 'bg-event' ?\n            <BgEvent seg={seg} {...getSegMeta(seg, todayRange, nowDate)} /> :\n            renderFill(fillType)\n          }\n        </div>\n      )\n    })\n\n    return <Fragment>{children}</Fragment>\n  }\n\n}\n","import { DateRange, intersectRanges, addMs, DateProfile, Slicer, DateProfileGenerator, DateEnv, DateMarker, Seg } from '@fullcalendar/common'\nimport { normalizeRange, isValidDate, TimelineDateProfile } from './timeline-date-profile'\nimport { computeDateSnapCoverage } from './TimelineCoords'\n\n\nexport interface TimelineLaneSeg extends Seg {\n  // the point of this range is because it might be different than seg.eventRange.range\n  // because the date might have been rounded to the start of a week or a month\n  start: DateMarker\n  end: DateMarker\n}\n\n\nexport class TimelineLaneSlicer extends Slicer<TimelineLaneSeg, [DateProfile, DateProfileGenerator, TimelineDateProfile, DateEnv]> {\n\n  sliceRange(\n    origRange: DateRange,\n    dateProfile: DateProfile,\n    dateProfileGenerator: DateProfileGenerator,\n    tDateProfile: TimelineDateProfile,\n    dateEnv: DateEnv\n  ): TimelineLaneSeg[] {\n    let normalRange = normalizeRange(origRange, tDateProfile, dateEnv)\n    let segs: TimelineLaneSeg[] = []\n\n    // protect against when the span is entirely in an invalid date region\n    if (computeDateSnapCoverage(normalRange.start, tDateProfile, dateEnv) < computeDateSnapCoverage(normalRange.end, tDateProfile, dateEnv)) {\n\n      // intersect the footprint's range with the grid's range\n      let slicedRange = intersectRanges(normalRange, tDateProfile.normalizedRange)\n\n      if (slicedRange) {\n        segs.push({\n          start: slicedRange.start,\n          end: slicedRange.end,\n          isStart: slicedRange.start.valueOf() === normalRange.start.valueOf() && isValidDate(slicedRange.start, tDateProfile, dateProfile, dateProfileGenerator),\n          isEnd: slicedRange.end.valueOf() === normalRange.end.valueOf() && isValidDate(addMs(slicedRange.end, -1), tDateProfile, dateProfile, dateProfileGenerator)\n        })\n      }\n    }\n\n    return segs\n  }\n\n}\n","import { StandardEvent, MinimalEventProps, createElement, BaseComponent, createFormatter } from '@fullcalendar/common'\n\n\nexport interface TimelineEventProps extends MinimalEventProps {\n  isTimeScale: boolean\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n})\n\n\nexport class TimelineEvent extends BaseComponent<TimelineEventProps> {\n\n\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={[ 'fc-timeline-event', 'fc-h-event' ]}\n        defaultTimeFormat={DEFAULT_TIME_FORMAT}\n        defaultDisplayEventTime={!props.isTimeScale}\n      />\n    )\n  }\n\n}\n","import { TimelineCoords } from './TimelineCoords'\nimport { TimelineLaneSeg } from './TimelineLaneSlicer'\nimport { sortEventSegs, OrderSpec, EventApi } from '@fullcalendar/common'\n\n\nexport function computeSegHorizontals(segs: TimelineLaneSeg[], timelineCoords?: TimelineCoords) {\n  let horizontals: { [instanceId: string]: { left: number, right: number } } = {}\n\n  if (timelineCoords) {\n    for (let seg of segs) {\n      let instanceId = seg.eventRange.instance.instanceId\n      horizontals[instanceId] = timelineCoords.rangeToCoords(seg) // seg has { start, end }\n    }\n  }\n\n  return horizontals\n}\n\n\nexport interface TimelineSegDims { // the natural dimensions queried from the DOM\n  left: number\n  right: number\n  height: number\n}\n\ninterface Placement {\n  key: string\n  dims: TimelineSegDims\n  top: number\n}\n\n\nexport function computeSegVerticals(segs: TimelineLaneSeg[], eventOrderSpecs: OrderSpec<EventApi>[], dimHash: { [key: string]: TimelineSegDims } | null) {\n  let placements: Placement[] = [] // sorted by top\n  let maxBottom = 0\n\n  if (dimHash) { // protection for if dims not computed yet\n    segs = sortEventSegs(segs, eventOrderSpecs) as TimelineLaneSeg[]\n\n    for (let seg of segs) {\n      let key = seg.eventRange.instance.instanceId\n      let dims = dimHash[key]\n\n      if (dims) { // MORE-link protection\n        let top = 0\n        let insertI = 0 // where to start searching for an insert position\n\n        for (let i = 0; i < placements.length; i++) { // loop through existing placements\n          let placement = placements[i]\n\n          if (testCollide(dims, top, placement.dims, placement.top)) {\n            top = placement.top + placement.dims.height\n            insertI = i\n          }\n        }\n\n        // move insertI along to be after the placement whos top is below the current top\n        while (insertI < placements.length && top >= placements[insertI].top) {\n          insertI++\n        }\n\n        placements.splice(insertI, 0, { key, dims, top }) // insert\n        maxBottom = Math.max(maxBottom, top + dims.height)\n      }\n    }\n  }\n\n  let topHash: { [key: string]: number } = {}\n\n  for (let placement of placements) {\n    topHash[placement.key] = placement.top\n  }\n\n  return { segTops: topHash, height: maxBottom }\n}\n\n\nfunction testCollide(dims0: TimelineSegDims, top0: number, dims1: TimelineSegDims, top1: number) { // TODO: use geom utils?\n  return dims0.right > dims1.left &&\n    dims0.left < dims1.right &&\n    top0 + dims0.height > top1 &&\n    top0 < top1 + dims1.height\n}\n","import {\n  Duration, EventStore, EventUiHash, DateSpan, EventInteractionState,\n  BaseComponent, createElement, memoize, Fragment, RefMap, mapHash, createRef, getSegMeta, DateMarker, DateRange, DateProfile\n} from '@fullcalendar/common'\nimport {TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineCoords } from './TimelineCoords'\nimport { TimelineLaneBg } from './TimelineLaneBg'\nimport { TimelineLaneSlicer, TimelineLaneSeg } from './TimelineLaneSlicer'\nimport { TimelineEvent } from './TimelineEvent'\nimport { computeSegHorizontals, computeSegVerticals, TimelineSegDims } from './event-placement'\n\n\nexport interface TimelineLaneProps extends TimelineLaneCoreProps {\n  onHeightChange?: (innerEl: HTMLElement, isStable: boolean) => void\n}\n\nexport interface TimelineLaneCoreProps {\n  nowDate: DateMarker\n  todayRange: DateRange\n  dateProfile: DateProfile\n  tDateProfile: TimelineDateProfile\n  nextDayThreshold: Duration\n  businessHours: EventStore | null\n  eventStore: EventStore | null\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  timelineCoords?: TimelineCoords // TODO: do null instead of undefined? .. SLAT coords\n}\n\ninterface TimelineLaneState {\n  segDims: { [instanceId: string]: TimelineSegDims } | null\n}\n\n\nexport class TimelineLane extends BaseComponent<TimelineLaneProps, TimelineLaneState> {\n\n  private slicer = new TimelineLaneSlicer()\n  private computeFgSegHorizontals = memoize(computeSegHorizontals) // only for fg event segs, not mirror\n  private computeSegVerticals = memoize(computeSegVerticals)\n  private harnessElRefs = new RefMap<HTMLDivElement>()\n  private innerElRef = createRef<HTMLDivElement>()\n\n  state = {\n    segDims: null\n  }\n\n\n  render() {\n    let { props, state, context } = this\n    let { dateProfile, tDateProfile } = props\n\n    let slicedProps = this.slicer.sliceProps(\n      props,\n      dateProfile,\n      tDateProfile.isTimeScale ? null : props.nextDayThreshold,\n      context, // wish we didn't have to pass in the rest of the args...\n      dateProfile,\n      context.dateProfileGenerator,\n      tDateProfile,\n      context.dateEnv\n    )\n\n    let mirrorSegs =\n      (slicedProps.eventDrag ? slicedProps.eventDrag.segs : null) ||\n      (slicedProps.eventResize ? slicedProps.eventResize.segs : null) ||\n      []\n\n    let segHorizontals = this.computeFgSegHorizontals(slicedProps.fgEventSegs, props.timelineCoords) // ONLY for non-mirror. needed?\n    let { segTops, height } = this.computeSegVerticals(slicedProps.fgEventSegs, context.options.eventOrder, state.segDims)\n\n    let hiddenSegs = // TODO: more convenient\n      (slicedProps.eventDrag ? slicedProps.eventDrag.affectedInstances : null) ||\n      (slicedProps.eventResize ? slicedProps.eventResize.affectedInstances : null) ||\n      {}\n\n    return (\n      <Fragment>\n        <TimelineLaneBg\n          businessHourSegs={slicedProps.businessHourSegs}\n          bgEventSegs={slicedProps.bgEventSegs}\n          timelineCoords={props.timelineCoords}\n          eventResizeSegs={slicedProps.eventResize ? slicedProps.eventResize.segs as TimelineLaneSeg[] : [] /* bad new empty array? */}\n          dateSelectionSegs={slicedProps.dateSelectionSegs}\n          nowDate={props.nowDate}\n          todayRange={props.todayRange}\n        />\n        <div\n          className='fc-timeline-events fc-scrollgrid-sync-inner'\n          ref={this.innerElRef}\n          style={{ height /* computed by computeSegVerticals */ }}\n        >\n          {this.renderFgSegs(\n            slicedProps.fgEventSegs,\n            segHorizontals,\n            segTops,\n            hiddenSegs,\n            false,\n            false,\n            false\n          )}\n          {this.renderFgSegs(\n            mirrorSegs as TimelineLaneSeg[],\n            computeSegHorizontals(mirrorSegs as TimelineLaneSeg[], props.timelineCoords), // not memoized\n            segTops, // reuse same tops for mirror\n            {},\n            Boolean(slicedProps.eventDrag),\n            Boolean(slicedProps.eventResize),\n            false // because mirror is never drawn for date selection\n          )}\n        </div>\n      </Fragment>\n    )\n  }\n\n\n  componentDidMount() {\n    this.updateSize()\n  }\n\n\n  componentDidUpdate(prevProps: TimelineLaneProps, prevState: TimelineLaneState) {\n    if (\n      prevProps.eventStore !== this.props.eventStore ||\n      prevProps.timelineCoords !== this.props.timelineCoords\n      // won't trigger on a segDims change\n    ) {\n      this.updateSize()\n    }\n  }\n\n\n  updateSize() {\n    let { props } = this\n    let { timelineCoords } = props\n\n    if (props.onHeightChange) {\n      props.onHeightChange(this.innerElRef.current, false)\n    }\n\n    if (timelineCoords) {\n      let originRect = timelineCoords.slatRootEl.getBoundingClientRect()\n\n      this.setState({\n        segDims: mapHash(this.harnessElRefs.currentMap, (harnessEl) => {\n          let harnessRect = harnessEl.getBoundingClientRect()\n\n          return {\n            left: Math.round(harnessRect.left - originRect.left),\n            right: Math.round(harnessRect.right - originRect.left),\n            height: Math.round(harnessRect.height)\n          }\n        })\n      }, () => {\n        if (props.onHeightChange) {\n          props.onHeightChange(this.innerElRef.current, true)\n        }\n      })\n    }\n  }\n\n\n  renderFgSegs(segs: TimelineLaneSeg[], segHorizontals, segTops, hiddenSegs, isDragging, isResizing, isDateSelecting) {\n    let { harnessElRefs, props } = this\n    let isMirror = isDragging || isResizing || isDateSelecting\n\n    return (\n      <Fragment>\n        {segs.map((seg) => {\n          let instanceId = seg.eventRange.instance.instanceId\n          let horizontalCoords = segHorizontals[instanceId]\n          let top = segTops[instanceId]\n\n          return (\n            <div\n              key={instanceId}\n              ref={isMirror ? null : harnessElRefs.createRef(instanceId)}\n              className='fc-timeline-event-harness'\n              style={{\n                left: horizontalCoords ? horizontalCoords.left : '',\n                right: horizontalCoords ? -horizontalCoords.right : '', // outwards from right edge (which is same as left edge)\n                top: top != null ? top : '',\n                visibility: hiddenSegs[instanceId] ? 'hidden' : ('' as any /* wtf, file @types/react bug */)\n              }}\n            >\n              <TimelineEvent\n                isTimeScale={this.props.tDateProfile.isTimeScale}\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === this.props.eventSelection /* TODO: bad for mirror? */}\n                {...getSegMeta(seg, props.todayRange, props.nowDate)}\n              />\n            </div>\n          )\n        })}\n      </Fragment>\n    )\n  }\n\n}\n","import { createElement, createRef, ViewProps, Hit, DateComponent, CssDimValue, VNode, DateMarker, NowTimer, greatestDurationDenominator, DateRange, NowIndicatorRoot, Fragment } from '@fullcalendar/common'\nimport { TimelineCoords } from './TimelineCoords'\nimport { TimelineSlats } from './TimelineSlats'\nimport { TimelineLane } from './TimelineLane'\nimport { TimelineDateProfile } from './timeline-date-profile'\n\n\nexport interface TimelinGridProps extends ViewProps {\n  tDateProfile: TimelineDateProfile\n  clientWidth: number | null\n  clientHeight: number | null\n  tableMinWidth: CssDimValue\n  tableColGroupNode: VNode\n  onSlatCoords?: (coords: TimelineCoords) => void\n  onScrollLeftRequest?: (scrollLeft: number) => void\n}\n\ninterface TimelineGridState {\n  coords: TimelineCoords | null\n}\n\n\nexport class TimelineGrid extends DateComponent<TimelinGridProps, TimelineGridState> {\n\n  private slatsRef = createRef<TimelineSlats>()\n\n  state = {\n    coords: null\n  }\n\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let { dateProfile, tDateProfile } = props\n    let timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit\n\n    return (\n      <div className='fc-timeline-body' ref={this.handeEl} style={{\n        minWidth: props.tableMinWidth,\n        height: props.clientHeight,\n        width: props.clientWidth\n      }}>\n        <NowTimer unit={timerUnit}>\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <TimelineSlats\n                ref={this.slatsRef}\n                dateProfile={dateProfile}\n                tDateProfile={tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                clientWidth={props.clientWidth}\n                tableColGroupNode={props.tableColGroupNode}\n                tableMinWidth={props.tableMinWidth}\n                onCoords={this.handleCoords}\n                onScrollLeftRequest={props.onScrollLeftRequest}\n              />\n              <TimelineLane\n                dateProfile={dateProfile}\n                tDateProfile={props.tDateProfile}\n                nowDate={nowDate}\n                todayRange={todayRange}\n                nextDayThreshold={options.nextDayThreshold}\n                businessHours={props.businessHours}\n                eventStore={props.eventStore}\n                eventUiBases={props.eventUiBases}\n                dateSelection={props.dateSelection}\n                eventSelection={props.eventSelection}\n                eventDrag={props.eventDrag}\n                eventResize={props.eventResize}\n                timelineCoords={state.coords}\n              />\n              {(options.nowIndicator && state.coords && state.coords.isDateInRange(nowDate)) &&\n                <div className='fc-timeline-now-indicator-container'>\n                  <NowIndicatorRoot isAxis={false} date={nowDate}>\n                    {(rootElRef, classNames, innerElRef, innerContent) => (\n                      <div\n                        ref={rootElRef}\n                        className={[ 'fc-timeline-now-indicator-line' ].concat(classNames).join(' ')}\n                        style={{ left: state.coords.dateToCoord(nowDate) }}\n                      >{innerContent}</div>\n                    )}\n                  </NowIndicatorRoot>\n                </div>\n              }\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n\n  handeEl = (el: HTMLElement | null) => {\n    if (el) {\n      this.context.registerInteractiveComponent(this, { el })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n\n  handleCoords = (coords: TimelineCoords) => {\n    this.setState({ coords })\n\n    if (this.props.onSlatCoords) {\n      this.props.onSlatCoords(coords)\n    }\n  }\n\n\n  // Hit System\n  // ------------------------------------------------------------------------------------------\n\n  queryHit(positionLeft: number, positionTop: number, elWidth: number, elHeight: number): Hit {\n    let slats = this.slatsRef.current\n    let slatHit = slats.positionToHit(positionLeft)\n\n    if (slatHit) {\n      return {\n        component: this,\n        dateSpan: slatHit.dateSpan,\n        rect: {\n          left: slatHit.left,\n          right: slatHit.right,\n          top: 0,\n          bottom: elHeight\n        },\n        dayEl: slatHit.dayEl,\n        layer: 0\n      }\n    }\n  }\n\n}\n","import {\n  createElement, ViewProps, memoize, ChunkContentCallbackArgs, createRef, ViewRoot, DateComponent, ScrollGridSectionConfig, renderScrollShim, getStickyHeaderDates, getStickyFooterScrollbar\n} from '@fullcalendar/common'\nimport { buildTimelineDateProfile, TimelineDateProfile } from './timeline-date-profile'\nimport { TimelineHeader } from './TimelineHeader'\nimport { ScrollGrid } from '@fullcalendar/scrollgrid'\nimport { TimelineGrid } from './TimelineGrid'\nimport { TimelineCoords } from './TimelineCoords'\n\n\ninterface TimelineViewState {\n  slatCoords: TimelineCoords | null\n  slotCushionMaxWidth: number | null\n}\n\n\nexport class TimelineView extends DateComponent<ViewProps, TimelineViewState> { // would make this abstract, but TS complains\n\n  private buildTimelineDateProfile = memoize(buildTimelineDateProfile)\n  private scrollGridRef = createRef<ScrollGrid>()\n\n  state = {\n    slatCoords: null,\n    slotCushionMaxWidth: null\n  }\n\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options)\n\n    let tDateProfile = this.buildTimelineDateProfile(\n      props.dateProfile,\n      context.dateEnv,\n      options,\n      context.dateProfileGenerator\n    )\n\n    let extraClassNames = [\n      'fc-timeline',\n      options.eventOverlap === false ? 'fc-timeline-overlap-disabled' : ''\n    ]\n\n    let { slotMinWidth } = options\n    let slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile))\n\n    let sections: ScrollGridSectionConfig[] = [\n      {\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'timeline',\n          content: (contentArg: ChunkContentCallbackArgs) => (\n            <TimelineHeader\n              dateProfile={props.dateProfile}\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              tDateProfile={tDateProfile}\n              slatCoords={state.slatCoords}\n              onMaxCushionWidth={slotMinWidth ? null : this.handleMaxCushionWidth}\n            />\n          )\n        }]\n      },\n      {\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunks: [{\n          key: 'timeline',\n          content: (contentArg: ChunkContentCallbackArgs) => (\n            <TimelineGrid\n              {...props}\n              clientWidth={contentArg.clientWidth}\n              clientHeight={contentArg.clientHeight}\n              tableMinWidth={contentArg.tableMinWidth}\n              tableColGroupNode={contentArg.tableColGroupNode}\n              tDateProfile={tDateProfile}\n              onSlatCoords={this.handleSlatCoords}\n              onScrollLeftRequest={this.handleScrollLeftRequest}\n            />\n          )\n        }]\n      }\n    ]\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'timeline',\n          content: renderScrollShim\n        }]\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={extraClassNames.concat(classNames).join(' ')}>\n            <ScrollGrid\n              ref={this.scrollGridRef}\n              liquid={!props.isHeightAuto && !props.forPrint}\n              colGroups={[\n                { cols: slatCols }\n              ]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n\n  handleSlatCoords = (slatCoords: TimelineCoords | null) => {\n    this.setState({ slatCoords })\n  }\n\n\n  handleScrollLeftRequest = (scrollLeft: number) => {\n    let scrollGrid = this.scrollGridRef.current\n    scrollGrid.forceScrollLeft(0, scrollLeft)\n  }\n\n\n  handleMaxCushionWidth = (slotCushionMaxWidth) => {\n    this.setState({\n      slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth) // for less rerendering TODO: DRY\n    })\n  }\n\n\n  computeFallbackSlotMinWidth(tDateProfile: TimelineDateProfile) { // TODO: duplicate definition\n    return Math.max(30, ((this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel))\n  }\n\n}\n\n\nexport function buildSlatCols(tDateProfile: TimelineDateProfile, slotMinWidth?: number) {\n  return [ {\n    span: tDateProfile.slotCnt,\n    minWidth: slotMinWidth || 1 // needs to be a non-zero number to trigger horizontal scrollbars!??????\n  } ]\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport premiumCommonPlugin from '@fullcalendar/premium-common'\nimport '@fullcalendar/premium-common' // ensure ambient declarations\nimport { TimelineView } from './TimelineView'\nimport './main.css'\n\nexport { TimelineView }\nexport { buildSlatCols } from './TimelineView'\nexport { TimelineLane, TimelineLaneProps, TimelineLaneCoreProps } from './TimelineLane'\nexport { TimelineLaneBg } from './TimelineLaneBg'\nexport { TimelineHeader } from './TimelineHeader'\nexport { TimelineSlats } from './TimelineSlats'\nexport { TimelineDateProfile, buildTimelineDateProfile } from './timeline-date-profile'\nexport { TimelineCoords } from './TimelineCoords'\nexport { TimelineLaneSlicer, TimelineLaneSeg } from './TimelineLaneSlicer'\nexport { TimelineHeaderRows } from './TimelineHeaderRows'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin\n  ],\n  initialView: 'timelineDay',\n  views: {\n\n    timeline: {\n      component: TimelineView,\n      usesMinMaxTime: true,\n      eventResizableFromStart: true // how is this consumed for TimelineView tho?\n    },\n\n    timelineDay: {\n      type: 'timeline',\n      duration: { days: 1 }\n    },\n\n    timelineWeek: {\n      type: 'timeline',\n      duration: { weeks: 1 }\n    },\n\n    timelineMonth: {\n      type: 'timeline',\n      duration: { months: 1 }\n    },\n\n    timelineYear: {\n      type: 'timeline',\n      duration: { years: 1 }\n    }\n\n  }\n})\n"],"names":[],"mappings":"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"}